---
name: build
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [centos7]
        mysql-version: [8.0.19, 8.0.20]
        scenario:
          [
            single_primary,
            multi_primary,
            master_slave_gtid,
            master_slave_binlog,
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
          architecture: x64
      - uses: actions/cache@v1
        id: cache
        with:
          path: molecule/${{ matrix.scenario }}/files/
          key: ${{ matrix.os }}-mysql-${{ matrix.mysql-version }}
          restore-keys: |
            ${{ matrix.os }}-mysql-${{ matrix.mysql-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible "molecule[docker,lint]"
      - name: Pre Commit
        run: |
          pre-commit run -a
      - name: Test with molecule
        env:
          MOLECULE_DISTRO: ${{ matrix.os }}
          MYSQL_VERSION: ${{ matrix.mysql-version }}
        run: |
          cd ..
          ln -sf ansible-role-mysql daixijun.mysql
          cd daixijun.mysql
          molecule test --scenario-name ${{ matrix.scenario }}
      - name: Publish role to Galaxy
        if: success()
        run: ansible-galaxy role import --api-key ${{ secrets.ANSIBLE_GALAXY_API_KEY }} $(echo $GITHUB_REPOSITORY | cut -d/ -f1) $(echo $GITHUB_REPOSITORY | cut -d/ -f2)
